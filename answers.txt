What are Promises in Node.js?

Promise is an object that return a value based on the result of an asynchronous operation. It had 3 possible states that can
be followed by .then to specify what action should be taken when any of these states occur.

What is callback hell?

Callback hell means nesting of callbacks many levels deep, which results in hardly readable code and may make it very hard
to debug the code

What tools can be used to assure consistent style?

There are many tools that help maintain clean, consistent style e.g ESLint or JSLint

What is REPL? What purpose it is used for?

REPL stands for read eval print loop and is similar to linux bash. It takes commands from the user and returs the result back.
It's a custom command line.

What is the difference between Asynchronous and Non-blocking?

Non-blocking is like a synchronous but it doesn't block the thread, instead it tries to return the answer immediately and if
it can't do that, it return an error. Asynchronous means that the process has been started in the background, it executes
without any order and will return result after some time.

List types of Http requests supported by Node.js?

GET, POST, PUT, DELETE, PATCH

Is Node.js entirely based on a single-thread?

Node.js is mostly single-threaded but for background tasks uses a thread pool to asynchronously process the requests

What is your favourite HTTP framework and why?

There are a few but I think the most interesting are Ajax frameworks like jQuery because the are powerful, easy to get 
into and fun to write code in.

What is difference between JavaScript and Node.js?

JS is a programming language that's used for running code in web browsers. NodeJS is a framework that is based on JS and is
used for server-side development

What is TypeScript? Do you use it? Why / why not?

Typescript is a superset of JavaScript meaning it is very similar. It makes code more readable and implements static typing.
I've used it before in projects and I could get better at using it if I put some time into it, but at this time I feel way 
more comfortable programming in JavaScript.